#include <stdio.h>
#include <stdlib.h>  // Required for dynamic memory allocation

// Function to fill the list
void fill_the_list(int array[], int n) {
    int i;
    for (i = 0; i < n; i++) {
        printf("Give element for your array: ");
        scanf("%d", &array[i]);  // Correct index assignment
    }
}

// Function to perform insertion sort
void insertion_sort_algorithm(int array[], int n) {
    int i, j, key;
    for (i = 1; i < n; i++) {
        key = array[i];
        j = i - 1;

        // Move elements that are greater than key one position ahead
        while (j >= 0 && array[j] > key) {
            array[j + 1] = array[j];
            j = j - 1;
        }
        array[j + 1] = key;
    }
}

int main() {
    int *array;  // Use dynamic allocation
    int N, i;

    printf("Type how many elements you want your list to have: ");
    scanf("%d", &N);

    // Allocate memory dynamically
    array = (int *)malloc(N * sizeof(int));
    if (array == NULL) {
        printf("Memory allocation failed!\n");
        return 1;
    }

    // Fill the array
    fill_the_list(array, N);

    // Sort the array
    insertion_sort_algorithm(array, N);

    // Print the sorted array
    printf("Sorted array: ");
    for (i = 0; i < N; i++) {
        printf("%d ", array[i]);
    }
    printf("\n");

    // Free allocated memory
    free(array);
    return 0;
}
